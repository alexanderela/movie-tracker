{"version":3,"sources":["images/star-clear.svg","images/star.svg","images/film-red.svg","serviceWorker.js","reducers/userReducer.js","reducers/index.js","reducers/moviesReducer.js","utilities/API.js","utilities/DataCleaner.js","containers/Card/index.js","actions/movieActions.js","components/CardContainer/index.js","containers/MainPage/index.js","actions/userActions.js","containers/Login/index.js","components/ErrorMessage/index.js","containers/App/index.js","index.js"],"names":["module","exports","__webpack_require__","p","Boolean","window","location","hostname","match","defaultState","id","loggedIn","rootReducer","combineReducers","user","state","arguments","length","undefined","action","type","movies","map","movie","movieId","Object","objectSpread","favorite","favoriteIds","favoriteMovies","movie_id","includes","fetchData","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","url","response","responseJson","wrap","_context","prev","next","fetch","sent","json","abrupt","stop","this","_x","apply","loginUser","_ref2","_callee2","userData","_context2","method","body","JSON","stringify","headers","Content-Type","data","_x2","createUser","_ref3","_callee3","_context3","_x3","addFavorite","_ref4","_callee4","_context4","user_id","title","poster_path","poster","release_date","releaseDate","vote_average","rating","overview","_x4","_x5","removeFavorite","_ref5","_callee5","_context5","concat","_x6","_x7","getFavorites","_ref6","_callee6","favorites","_context6","_x8","fetchMovies","movieData","currentMovies","API","returnMovieData","results","moviePromises","backdrop","backdrop_path","formatReleaseDate","Promise","all","date","month","slice","day","year","Card","_Component","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleFavorite","_this$props","toggleFavorite","props","handleExpand","e","target","className","setState","expanded","returnRatingColor","num","inherits","createClass","key","value","_this2","_this$props2","ratingStyles","width","background","react_default","createElement","style","backgroundImage","onClick","alt","src","filledStar","star","Component","connect","dispatch","CardContainer","movieCards","containers_Card","signOut","clearFavorites","enableError","NavLink","to","redLogo","event","preventDefault","components_CardContainer","Login","handleChange","_e$target","name","defineProperty","submitLogin","_this$state","email","password","setFavorites","loginAttempt","error","toggleCreate","create","newUserResponse","status","clearInputs","_this$state2","_this$state3","placeholder","onChange","successfulLogin","ErrorMessage","message","closeError","App","filterFavorites","filter","filteredMovies","toggleError","showError","_componentDidMount","DataCleaner","setMovies","Switch","Route","exact","path","render","containers_MainPage","Redirect","containers_Login","components_ErrorMessage","withRouter","devTools","__REDUX_DEVTOOLS_EXTENSION__","store","createStore","router","es","BrowserRouter","containers_App","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.634e7c0e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/star-clear.25bcd45f.svg\";","module.exports = __webpack_public_path__ + \"static/media/star.c0210b84.svg\";","module.exports = __webpack_public_path__ + \"static/media/film-red.f8858d24.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const defaultState = {\n  id: null,\n  loggedIn: false,\n}\nexport const userReducer = (state = defaultState, action) => {\n  switch (action.type) {\n    case 'SUCCESSFUL_LOGIN':\n      return {id: action.id, loggedIn: true}\n    case 'SIGN_OUT':\n      return defaultState;\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport { userReducer } from './userReducer';\nimport { moviesReducer } from './moviesReducer';\n\nexport const rootReducer = combineReducers({\n  user: userReducer,\n  movies: moviesReducer,\n});\n","export const moviesReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'SET_MOVIES':\n      return action.movies;\n\t\tcase 'TOGGLE_FAVORITE':\n      return state.map(movie => {\n      \tif(movie.id === action.movieId) {\n        \treturn {...movie, favorite: !movie.favorite}\n      \t} else {\n      \t\treturn movie\n      \t}\n      });\n    case 'SET_FAVORITES':\n      const favoriteIds = action.favoriteMovies.map(movie => movie.movie_id);\n      return state.map(movie => {\n        if (favoriteIds.includes(movie.id)) {\n          return { ...movie, favorite: true };\n        }\n        return movie;\n      });\n    case 'CLEAR_FAVORITES':\n      return state.map(movie => {\n        return {...movie, favorite: false}\n      });\n    default:\n      return state;\n  }\n}\n","export const fetchData = async (url) => {\n\tconst response = await fetch(url)\n  const responseJson = await response.json()\n  return responseJson\n}\n\nexport const loginUser = async (user) => {\n  const response = await fetch('http://localhost:3000/api/users', {\n    method: 'POST',\n    body: JSON.stringify(user),\n    headers:{\n      'Content-Type': 'application/json'\n    }\n  });\n  const userData = await response.json();\n  return userData.data;\n}\n\nexport const createUser = async (user) => {\n  return fetch('http://localhost:3000/api/users/new', {\n    method: 'POST',\n    body: JSON.stringify(user),\n    headers:{\n      'Content-Type': 'application/json'\n    }\n  });\n}\n\nexport const addFavorite = async (movie, user) => {\n  const response = await fetch('http://localhost:3000/api/users/favorites/new', {\n    method: 'POST',\n    body: JSON.stringify({\n      movie_id: movie.id,\n      user_id: user.id,\n      title: movie.title,\n      poster_path: movie.poster,\n      release_date: movie.releaseDate,\n      vote_average: movie.rating,\n      overview: movie.overview\n    }),\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  });\n  return response.json();\n}\n\nexport const removeFavorite = async (movie, user) => {\n  return fetch(`http://localhost:3000/api/users/${user.id}/favorites/${movie.id}`, {\n    method: 'DELETE',\n    body: JSON.stringify({\n      movie_id: movie.id,\n      user_id: user.id,\n    }),\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  })\n}\n\nexport const getFavorites = async (user) => {\n  const response = await fetch(`http://localhost:3000/api/users/${user.id}/favorites`);\n  const favorites = await response.json();\n  return favorites.data;\n}\n","import * as API from './API'\n\nexport const fetchMovies = async () => {\n\tconst apiKey = '26d5b93e45b773596adda2d2b99efa0f'\n\tconst url = `https://api.themoviedb.org/3/movie/now_playing?api_key=${apiKey}&language=en-US&page=1`\n\n\tconst movieData = await API.fetchData(url)\n\tconst currentMovies = await returnMovieData(movieData.results)\n\treturn currentMovies\n}\n\nexport const returnMovieData = async (movies) => {\n\tconst moviePromises = movies.map( async movie => {\n\n\t\treturn {\n\t\t\ttitle: movie.title,\n\t\t\tposter: `https://image.tmdb.org/t/p/w500/${movie.poster_path}`,\n\t\t\tbackdrop: `https://image.tmdb.org/t/p/w500/${movie.backdrop_path}`,\n\t\t\toverview: movie.overview,\n\t\t\treleaseDate: formatReleaseDate(movie.release_date),\n\t\t\trating: movie.vote_average,\n\t\t\tfavorite: false,\n\t\t\tid: movie.id,\n\t\t}\n\t})\n\treturn Promise.all(moviePromises)\n}\n\nexport const formatReleaseDate = (date) => {\n\tconst month = date.slice(5,7)\n\tconst day = date.slice(8,10)\n\tconst year = date.slice(0,4)\n\treturn `${month}/${day}/${year}`\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { toggleFavorite } from '../../actions/movieActions';\nimport { removeFavorite, addFavorite } from '../../utilities/API';\nimport star from '../../images/star-clear.svg';\nimport './Card.css';\nimport filledStar from '../../images/star.svg';\nimport * as API from '../../utilities/API';\n\nexport class Card extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\texpanded: false\n\t\t}\n\t}\n\n\thandleFavorite = async (movie) => {\n    const { user, toggleFavorite } = this.props;\n\t\tconst { id, favorite } = movie;\n\n    if (!user.loggedIn) {\n      return undefined;\n    }\n    if (favorite) {\n      removeFavorite(movie, user);\n    } else {\n      addFavorite(movie, user);\n    }\n      toggleFavorite(id);\n    }\n\n  handleExpand = (e) => {\n    if (!e.target.className.includes('card-favorite-button')) {\n      this.setState({\n        expanded: !this.state.expanded\n      })\n    }\n  }\n\n  returnRatingColor = num => {\n    if (num < 6) {\n      return '#BC2D2B'\n    } else if (num >= 6 && num < 7) {\n      return '#F5D14B'\n    } else {\n      return '#51B04D';\n    }\n  }\n\n  render() {\n    const { movie, user } = this.props;\n    const { expanded } = this.state;\n    const ratingStyles = {\n      width: `${this.props.movie.rating * 10}%`,\n      background: this.returnRatingColor(movie.rating)\n    };\n\n    return(\n\t\t\t<div\n\t\t\t\tclassName={!expanded ? 'Card' : 'Card expanded-card'}\n\t\t\t\tstyle={{backgroundImage: 'url(' + movie.backdrop + ')'}}\n        onClick={this.handleExpand}>\n        <div className=\"expanded-background\"></div>\n        <div className=\"card-inner-wrapper\">\n          <h3 className=\"movie-title\" >\n            <div className=\"movie-rating\" >\n              {!expanded &&\n                <div>Rating {movie.rating}</div>\n              }\n            </div>\n            {movie.title}\n            <button\n              className={`card-favorite-button\n                ${movie.favorite && user.loggedIn\n                  ? 'fav-btn-active'\n                  : 'fav-btn-inactive'}`}\n              onClick={() => this.handleFavorite(movie)}>\n              <img className=\"card-favorite-button-star\" alt=\"\" src={movie.favorite ? filledStar : star} />\n            </button>\n          </h3>\n          <div className=\"expanded-lower-container\">\n            <img \n              src={movie.poster} \n              alt=\"\"\n              className='poster-image'/>\n            <div className=\"lower-middle-expanded\">\n              <p className=\"card-overview\">\n                <strong>Description</strong>\n                <br />\n                {movie.overview}\n              </p>\n              {expanded &&\n                <div className=\"rating-container\">\n                  <div className=\"rating-bar\" style={ratingStyles} >{movie.rating} / 10</div>\n                </div>\n              }\n            </div>\n            <p className=\"card-release-date\">\n              <strong>Release Date</strong>\n              <br/>\n              {movie.releaseDate}\n            </p>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport const mapStateToProps = ({ user }) => ({ user });\n\nexport const mapDispatchToProps = (dispatch) => ({\n\ttoggleFavorite: (movieId) => dispatch(toggleFavorite(movieId)),\n});\n\nCard.propTypes = {\n  movie: PropTypes.object.isRequired,\n  user: PropTypes.object.isRequired,\n  toggleFavorite: PropTypes.func.isRequired\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Card);","export const toggleFavorite = (movieId) => ({\n    type: 'TOGGLE_FAVORITE',\n    movieId\n});\n\nexport const setFavorites = (favoriteMovies) => ({\n  type: 'SET_FAVORITES',\n  favoriteMovies\n});\n\nexport const setMovies = (movies) => ({\n  type: 'SET_MOVIES',\n  movies\n});\n\nexport const clearFavorites = (favoriteMovies) => ({\n\ttype: 'CLEAR_FAVORITES',\n\tfavoriteMovies\n})\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './CardContainer.css'\nimport Card from '../../containers/Card';\n\nconst CardContainer = ({ movies }) => {\n\tconst movieCards = movies.map(movie => {\n\t\treturn <Card movie={movie} key={movie.title}  />\n\t})\n\n\treturn (\n\t\t<div className='CardContainer'>\n\t\t\t{ movieCards }\n\t\t</div>\n\t)\n}\n\nCardContainer.propTypes = {\n  movies: PropTypes.array.isRequired\n}\n\nexport default CardContainer;\n","import React from 'react';\nimport CardContainer from '../../components/CardContainer';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport * as userActions from '../../actions/userActions';\nimport * as movieActions from '../../actions/movieActions';\nimport redLogo from '../../images/film-red.svg';\nimport PropTypes from 'prop-types';\n\nexport const MainPage = ({ user, signOut, movies, clearFavorites, enableError }) => {\n  const handleSignOut = (event) => {\n    event.preventDefault();\n    clearFavorites(movies);\n    signOut();\n  }\n\n  return (\n    <div className='MainPage'>\n      <div className=\"main-header\" >\n        <button className='all-favorites' onClick={enableError}>\n          <NavLink\n            to='/favorites'\n            className='nav-link'>Favorites\n          </NavLink>\n        </button>\n        <div className=\"header-title\">\n          <NavLink to='/'>\n            <img className=\"main-logo\" alt=\"\" src={redLogo} />\n            <h3 className=\"header-text\">MovieTracker</h3>\n          </NavLink>\n        </div>\n        { user.loggedIn\n          ? <button\n            className='sign-out'\n            onClick={handleSignOut}>\n              <NavLink\n                to='/'\n                className='nav-link'>Sign Out\n              </NavLink>\n          </button>\n          : <button\n            className='sign-in'>\n            <NavLink\n              to='/login'\n              className='nav-link'>Sign In</NavLink>\n          </button>\n          }\n      </div>\n      <div className=\"header-container-splitter\"></div>\n      <CardContainer movies={movies}/>\n    </div>\n  )\n}\n\nconst mapStateToProps = ({ user }) => ({ user });\nconst mapDispatchToProps = (dispatch) => ({\n  signOut: () => dispatch(userActions.signOut()),\n  clearFavorites: (movies) => dispatch(movieActions.clearFavorites(movies))\n});\n\nMainPage.propTypes = {\n  user: PropTypes.object.isRequired,\n  movies: PropTypes.array.isRequired,\n  signOut: PropTypes.func.isRequired,\n  clearFavorites: PropTypes.func.isRequired,\n  enableError: PropTypes.func\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MainPage);\n","export const successfulLogin = (user) => ({\n    type: 'SUCCESSFUL_LOGIN',\n    id: user.id\n});\n\nexport const signOut = () => ({\n  type: 'SIGN_OUT'\n});\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport './Login.css';\nimport { setFavorites } from '../../actions/movieActions';\nimport { successfulLogin } from '../../actions/userActions';\nimport './Login.css';\nimport * as API from '../../utilities/API';\nimport { NavLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nexport class Login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      email: '',\n      password: '',\n      name: '',\n      error: '',\n      create: false,\n    }\n  }\n\n  handleChange = (e) => {\n    const { name, value } = e.target;\n    e.preventDefault();\n   this.setState({ [name] : value});\n  }\n\n  submitLogin = async (e) => {\n    e.preventDefault();\n    const { email, password } = this.state;\n    const { loginUser, setFavorites } = this.props\n    const loginAttempt = await API.loginUser({email, password});\n\n    if (loginAttempt) {\n      loginUser(loginAttempt);\n      const favorites = await API.getFavorites(loginAttempt);\n      setFavorites(favorites);\n    } else {\n      this.setState({error: 'Email and Password did not match'});\n    }\n  }\n\n  toggleCreate = async (e) => {\n    e.preventDefault();\n    const { create } = this.state;\n    const newUserResponse = await this.newUserResponse(e);\n\n    if (create && newUserResponse.status >= 400) {\n      this.setState({error: 'Email has already been used'})\n      this.clearInputs()\n    } else if (!create || newUserResponse.status <= 400) {\n      this.setState({ create: !create, error: '' });\n    }\n  }\n\n  newUserResponse = async (e) => {\n    e.preventDefault()\n    const { email, password, name } = this.state;\n    return await API.createUser({email, password, name});\n  }\n\n  clearInputs = () => {\n    this.setState({\n      email: '',\n      password: '',\n      name: ''\n    })\n  }\n\n  render() {\n    const { email, password, create, error, name } = this.state;\n    return (\n      <div className='Login'>\n      <form className='Login-form'>\n        <h1 className='Login-header'> Movie Tracker </h1>\n        <h3> Login </h3>\n        { create ?\n            <input\n              name='name'\n              value={name}\n              type='text'\n              placeholder='Name'\n              onChange={this.handleChange}/>\n            : null }\n        <input\n          name='email'\n          value={email}\n          type='text'\n          placeholder='Email address'\n          onChange={this.handleChange}/>\n        <input\n          name='password'\n          value={password}\n          type='password'\n          placeholder='Password'\n          onChange={this.handleChange}/>\n        { !create\n            ? <button\n                type='submit'\n                className='login-button'\n                onClick={this.submitLogin}>Login\n              </button>\n            : null }\n        <button\n          className='create-user'\n          onClick={this.toggleCreate}>Create User\n        </button>\n        { error.length ? <div className='error'>{error}</div> : null }\n        <NavLink to='/' className='home-link'>Home</NavLink>\n      </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = ({ user }) => ({ user });\nconst mapDispatchToProps = (dispatch) => ({\n  loginUser: (user) => dispatch(successfulLogin(user)),\n  setFavorites: (favoriteMovies) => dispatch(setFavorites(favoriteMovies))\n});\n\nLogin.propTypes = {\n  user: PropTypes.object,\n  loginUser: PropTypes.func.isRequired,\n  setFavorites: PropTypes.func.isRequired\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n","import React, { Component } from 'react';\nimport './ErrorMessage.css'\nimport { NavLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nclass ErrorMessage extends Component {\n  render() {\n    const { message, closeError, user } = this.props\n\n    return (\n      <div className='ErrorMessage'>\n        <div className='ErrorMessage_inner'>\n          <h1 className='Login-header'> Movie Tracker </h1>\n          <p>{message}</p>\n          <button className='home-button-error'\n            onClick={closeError}>\n            <NavLink to='/' className='home-link-error'>Home\n            </NavLink>\n          </button>\n          {!user.loggedIn &&\n          <button className='login-button-error'\n            onClick={closeError}>\n            <NavLink to='/login' className='login-link-error'>Login/Create Account\n            </NavLink>\n          </button>\n        }\n        </div>\n      </div>\n    );\n  }\n}\n\nErrorMessage.propTypes = {\n  message: PropTypes.string,\n  closeError: PropTypes.func,\n  user: PropTypes.object\n}\n\nexport default ErrorMessage;\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router';\nimport { Route, Redirect, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { setMovies } from '../../actions/movieActions';\nimport * as DataCleaner from '../../utilities/DataCleaner'\nimport MainPage from '../MainPage';\nimport Login from '../Login';\nimport './App.css';\nimport ErrorMessage from '../../components/ErrorMessage';\nimport PropTypes from 'prop-types';\n\nexport class App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      showError: false\n    }\n  }\n\n  async componentDidMount() {\n    const movies = await DataCleaner.fetchMovies()\n    this.props.setMovies(movies)\n  }\n\n  filterFavorites = () => {\n    return this.props.movies.filter((movie) => movie.favorite);\n  }\n\n  enableError = () => {\n    const { loggedIn } = this.props.user\n    const filteredMovies = this.filterFavorites()\n    if (!loggedIn || !filteredMovies.length) {\n      this.toggleError()\n    }\n  }\n\n  toggleError = () => {\n    this.setState({ showError: !this.state.showError })\n  }\n\n  render() {\n    const { loggedIn } = this.props.user;\n    const { movies, user } = this.props\n    const { showError } = this.state\n\n    return (\n      <div className='App'>\n        <Switch>\n          <Route exact path='/' render={() => {\n            return <MainPage\n              movies={movies}\n              enableError={this.enableError}/>\n            }\n          }/>\n          <Route exact path='/login' render={() => loggedIn ?\n            <Redirect to='/'/> : <Login/>}/>\n          <Route exact path='/favorites' render={() => {\n            if(!loggedIn && showError) {\n              return <ErrorMessage\n                        closeError={this.toggleError}\n                        message={'Please login or create an account to add/view favorites.'}\n                        user={user}\n                        />\n            } else if (loggedIn && showError){\n              return <ErrorMessage\n                        closeError={this.toggleError}\n                        message={'You currently have no favorites selected.'}\n                        user={user}\n                        />\n            } else {\n              return <MainPage\n                        movies={this.filterFavorites()}\n                        enableError={this.enableError}\n                        user={user}\n                        />\n                    }\n            }\n          }/>\n        <Route render={() => <MainPage movies={movies}/>}/>\n      </Switch>\n      </div>\n    );\n  }\n}\n\nexport const mapStateToProps = ({ user, movies }) => ({ user, movies });\n\nexport const mapDispatchToProps = (dispatch) => ({\n  setMovies: (movies) => dispatch(setMovies(movies))\n});\n\nApp.propTypes = {\n  user: PropTypes.object.isRequired,\n  movies: PropTypes.array.isRequired,\n  setMovies: PropTypes.func.isRequired\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\nimport { rootReducer } from './reducers';\nimport './index.css';\nimport App from './containers/App';\n\nconst devTools = window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\nconst store = createStore(rootReducer, devTools);\n\nconst router = (\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>\n)\n\n\nReactDOM.render(router, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}